# {{ ansible_managed }}

ddns-updates on;
option domain-name "{{ localdns_domain }}";
option domain-name-servers {{ localdns_dns }};
{% if localdns_ntp is defined %}
option ntp-servers {{ localdns_ntp }};
{% endif %}
option subnet-mask {{ localdns_subnet }};
option ip-forwarding {{ localdns_dhcp_ipforwarding }};
default-lease-time {{ localdns_dhcp_lease_def }};
max-lease-time {{ localdns_dhcp_lease_max }};
authoritative;
log-facility local7;

shared-network local-network {

{% for zone in localdns_zones %}
    subnet {{ zone.router.split('.')[0:3] | join('.') }}.0 netmask 255.255.255.0 {
        option routers {{ zone.router }};
        option broadcast-address {{ zone.router.split('.')[0:3] | join('.') }}.255;
{% if zone.dns is defined %}
        option domain-name-servers {{ zone.dns }};
{% endif %}
{% if zone.subnet is defined %}
        option subnet-mask {{ zone.subnet }};
{% endif %}
{% if zone.ntp is defined %}
        option ntp-servers {{ zone.ntp }};
{% endif %}
{% if zone.ipforwarding is defined %}
        option ip-forwarding {{ zone.ipforwarding }};
{% endif %}
        range {{ zone.router.split('.')[0:3] | join('.') }}.1 {{ zone.router.split('.')[0:3] | join('.') }}.254;
    }

{% endfor %}
}

{% for zone in localdns_zones %}
{% for entry in zone.entries %}
{% if entry.mac is defined and entry.mac != none and entry.mac|trim != '' %}
host {{ entry.host }}.{{ localdns_domain }} {
    hardware ethernet {{ entry.mac }};
    fixed-address {{ entry.ip }};
}
{% endif %}
{% endfor %}

{% endfor %}

